<mvc:View controllerName="chatbot.djchatbotai.controller.CheckFlight"
	displayBlock="true"
    xmlns:mvc="sap.ui.core.mvc" 
	xmlns:layout="sap.ui.layout"	
    xmlns:core="sap.ui.core"
	xmlns:uxap="sap.uxap"
	xmlns:t="sap.ui.table"
	xmlns:f="sap.f" 	
    xmlns="sap.m"
    xmlns:fb="sap.ui.comp.filterbar"    
    width="100%"
	>
		<f:DynamicPage id="dynamicPageId" headerExpanded="{/headerExpanded}" toggleHeaderOnTitleClick="{/titleClickable}">
			<!-- DynamicPage Title -->
			<f:title>
				<f:DynamicPageTitle>
					<f:heading>
						<Title text="Flight Schedule"/>
					</f:heading>
					<f:breadcrumbs>
						<Breadcrumbs>
							<Link text="Home" press = "onNavigationBackPress"/>
							<!-- <Link text="My Reservation" /> -->
						</Breadcrumbs>
					</f:breadcrumbs>
					<f:expandedContent>
						<Label text="Welcome! {userModel>/USERNAME}. "/>
					</f:expandedContent>
					<f:snappedContent>
						<Label text="{routerModel>/LocationFromName} - {routerModel>/LocationToName}, {routerModel>/Passenger} Person"/>
					</f:snappedContent>
					<f:snappedTitleOnMobile>
						<Title text="This is a subheading"/>
					</f:snappedTitleOnMobile>
					<f:content>
						<OverflowToolbar>
							<GenericTag text = "{= !!${userModel>/CLASS}?${userModel>/CLASS}:'Non-Member'}"
								status="{= ${userModel>/CLASS} === 'Gold Member' ? 'Warning' : (${userModel>/CLASS} === 'Silver Member' ? 'None' : 'Success')}"
								press="onPressOpenPopover"
								design="StatusIconHidden">
								<ObjectNumber number="|"
									unit="{userModel>/SUBSCRIPTION}"
									emphasized="false"
									state="Error"/>
							</GenericTag>
						</OverflowToolbar>
					</f:content>
					<f:actions>
						<Button
								text="My Reservation"
								type="Emphasized"
								press="onDialogPress"
                                ariaHasPopup="Dialog"/>
						<Button
								text="Clear"
								type="Transparent"
                                press="toggleAreaPriority"/>
						<Button
								icon="sap-icon://action"
								type="Transparent"/>
						<Button
								text="Button with layoutData"
								type="Transparent"
								press="onPressOpenPopover">
							<layoutData>
								<OverflowToolbarLayoutData priority="AlwaysOverflow" closeOverflowOnInteraction="false" />
							</layoutData>
						</Button>
					</f:actions>
					<f:navigationActions>
						<Button
								icon="sap-icon://full-screen"
								type="Transparent" />
						<Button
								icon="sap-icon://decline"
								type="Transparent" />
					</f:navigationActions>
				</f:DynamicPageTitle>
			</f:title>
			<!-- DynamicPage Header -->
			<f:header>
				<f:DynamicPageHeader pinnable="true">
					<layout:HorizontalLayout allowWrapping="true">
						<!-- <layout:VerticalLayout class="sapUiMediumMarginEnd">
							<ObjectAttribute title="From" text="{routerModel>/locationFromName}"/>
							<ObjectAttribute title="To" text="{routerModel>/locationToName}"/>
							<ObjectAttribute title="Passenger" text="{routerModel>/Passenger}"/>
						</layout:VerticalLayout> -->
						<layout:VerticalLayout class="sapUiMediumMarginEnd">
							<ObjectAttribute title="From"/>
                            <ObjectStatus text="{routerModel>/LocationFromName}" state="Information"/>
						</layout:VerticalLayout>
                        <layout:VerticalLayout class="sapUiMediumMarginEnd">
							<ObjectAttribute title="To"/>
                            <ObjectStatus text="{routerModel>/LocationToName}" state="Information"/>
						</layout:VerticalLayout>
                        <layout:VerticalLayout class="sapUiMediumMarginEnd">
							<ObjectAttribute title="Passenger"/>
                            <ObjectStatus text="{routerModel>/Passenger}" state="Information"/>
						</layout:VerticalLayout>
						<layout:VerticalLayout>
							<ObjectAttribute title="Availability"/>
							<ObjectStatus text="Total {scheduleModel>/tableL} Schedule Available in DJ Flight" state="Success"/>
						</layout:VerticalLayout>
					</layout:HorizontalLayout>
                    <fb:FilterBar id="filterbar" persistencyKey="myPersKey" useToolbar="false" search=".onFilterSearch" showFilterConfiguration="false" filterChange=".onFilterChange" afterVariantLoad=".onAfterVariantLoad">
                        <fb:filterGroupItems>
                            <fb:FilterGroupItem name="sPoint" label="Starting Point" groupName="Group1" visibleInFilterBar="true">
                                <fb:control>
                                    <Select
                                        name="starting_point"
                                        selectedKey="{filterModel>/LocationFrom}"
                                        items="{
                                            path: 'filterModel>/StartingPoint',
                                            sorter: { path: 'filterModel>Country' },
                                            templateShareable: true
                                        }"
                                    >
                                        <core:Item key="{filterModel>AirportID}" text="{filterModel>Country}"/>
                                    </Select>
                                    <!-- <MultiComboBox
                                        name="starting_point"
                                        selectionChange=".onSelectionChange"
                                        items="{
                                            path: 'filterModel>/StartingPoint',
                                            sorter: { path: 'filterModel>Country' },
                                            templateShareable: true
                                        }"
                                    >
                                        <core:Item key="{filterModel>AirportID}" text="{filterModel>Country}"/>
                                    </MultiComboBox> -->
                                </fb:control>
                            </fb:FilterGroupItem>
                            <fb:FilterGroupItem name="Category" label="Destination" groupName="Group1" visibleInFilterBar="true">
                                <fb:control>
                                    <Select
                                        name="destination"
                                        selectedKey="{filterModel>/LocationTo}"
                                        items="{
                                            path: 'filterModel>/Destination',
                                            sorter: { path: 'filterModel>Country' },
                                            templateShareable: true
                                    }">
                                        <core:Item key="{filterModel>AirportID}" text="{filterModel>Country}"/>
                                    </Select>
                                </fb:control>
                            </fb:FilterGroupItem>
                            <fb:FilterGroupItem name="SupplierName" label="Passenger" groupName="Group1" visibleInFilterBar="true">
                                <fb:control>
                                    <Select
                                        name="passenger"
                                        selectedKey="{filterModel>/DefaultP}"
                                        items="{
                                            path: 'filterModel>/Passenger',
                                            sorter: { path: 'filterModel>number' },
                                            templateShareable: true
                                    }">
                                        <core:Item key="{filterModel>number}" text="{filterModel>number}" />
                                    </Select>
                                    <!-- <Input
                                        id="Passenger"
                                        value="{filterModel>/Passenger}"
                                        type = "Number"
                                        editable="true"	
                                        width="30%"/>	 -->
                                </fb:control>
                            </fb:FilterGroupItem>
                        </fb:filterGroupItems>
                    </fb:FilterBar>
				</f:DynamicPageHeader>
			</f:header>
			<f:content>
            <t:Table 
                id="schduleTable"
                noData="No Flight schedule"
                rows="{
					path: 'scheduleModel>/results',						
					sorter: [  
						{path: 'FLDATE'}, {path: 'DEPTIME'}, {path: 'CARRID'}, {path: 'CONNID'} 
					]
				}"
                threshold = "50"
                rowMode="Auto"
                selectionMode="None"
                selectionBehavior="RowSelector"
                rowActionCount="1"
                columnResize="onColumnResize"
                enableColumnFreeze="true"
                >
                <t:extension>
                    <OverflowToolbar design="Transparent">
                        <Title text="Search {scheduleModel>/tableL} Rows" />
                        <ToolbarSpacer/>
                        <!-- <Button text="Test Button" type="Transparent" press=".onTestPress"/>
                        <Button text="Test Button2" type="Emphasized" press=".onTestPress"/>
                        <Button text="Test Button3" type="Attention" press=".onTestPress"/> -->
                        <Button icon="sap-icon://ai" press=".onExportPress" />
                    </OverflowToolbar>
                </t:extension>
                <t:rowActionTemplate>
                    <t:RowAction>
                        <t:RowActionItem type="Navigation" press=".onCellClick" visible="true"></t:RowActionItem>
                    </t:RowAction>
                </t:rowActionTemplate>
                <t:columns>
                    <!-- Airline -->
                    <t:Column hAlign="Center" width="4rem" sortProperty="CARRID" filterProperty="CARRID">
                        <Label text="Airline"/>
                        <t:template>
                            <Text text="{
                                path: 'scheduleModel>CARRID',
                                type: 'sap.ui.model.type.String'
                            }"/>
                        </t:template>
                    </t:Column>
                    <!-- Flight Code -->
                    <t:Column hAlign="Center" width="6em" sortProperty="CONNID" filterProperty="CONNID" >
                        <Label text="Flight Code" textAlign="Center"/>
                        <t:template>
                            <Text text="{scheduleModel>CONNID}" wrapping="false" textAlign="Left"/>
                        </t:template>
                    </t:Column>
                    <!-- Departure -->
                    <t:Column  width="8em" hAlign="Left" sortProperty="CITYFROM" filterProperty="CITYFROM">
                        <Label text="Departure" />
                        <t:template>
                            <Text text="{scheduleModel>CITYFROM}" wrapping="false"/>
                        </t:template>
                    </t:Column>
                    <!-- Arrival -->
                    <t:Column  width="8em" hAlign="Left" sortProperty="CITYTO" filterProperty="CITYTO">
                        <Label text="Arrival" />
                        <t:template>
                            <Text text="{scheduleModel>CITYTO}" wrapping="false"/>
                        </t:template>
                    </t:Column>
                    <!-- Flight Date -->
                    <t:Column  width="6em" hAlign="Left" sortProperty="FLDATE" filterProperty="FLDATE">
                        <Label text="Flight Date" />
                        <t:template>
                            <Text text="{
								path : 'scheduleModel>FLDATE',
                                formatter : '.formatDate'
							}" wrapping="false"/>
                        </t:template>
                    </t:Column>
                    <!-- Departure Time -->
                    <t:Column  width="5em" hAlign="Center" sortProperty="DEPTIME" filterProperty="DEPTIME">
                        <Label text="Dep.Time" />
                        <t:template>
                            <Text text="{
                                path: 'scheduleModel>DEPTIME', 
                                type: 'sap.ui.model.odata.type.Time', 
                                formatOptions: { style: 'long', pattern: 'HH:mm', UTC : false},
                                source: { pattern: 'HH:mm:ss' }
                            }" />
                            <!-- <Text text="{ path : 'scheduleModel>DEPTIME', type: new sap.ui.model.odata.type.Time({ source : { __edmtype: "Edm.Time" }, pattern: "HH:MM:SS" }) } " wrapping="false"/> -->
                        </t:template>
                    </t:Column>
                    <!-- Arrival Time -->
                    <t:Column  width="5em" hAlign="Center" sortProperty="ARRTIME" filterProperty="ARRTIME">
                        <Label text="Arr.Time" />
                        <t:template>
                            <Text text="{
                                path: 'scheduleModel>ARRTIME', 
                                type: 'sap.ui.model.odata.type.Time', 
                                formatOptions: { style: 'long', pattern: 'HH:mm', UTC : false},
                                source: { pattern: 'HH:mm:ss' }
                            }" />
                            <!-- <Text text="{ path : 'scheduleModel>ARRTIME', formatter : '.formatTime' }" wrapping="false"/> -->
                            <!-- <Text text="{testModel>arrtime}" wrapping="false"/> -->
                        </t:template>
                    </t:Column>
                    <!-- Economy -->
                    <t:Column width="5em" hAlign="Center" sortProperty="SEATOCC" filterProperty="SEATOCC">
                        <Label text="Economy" />
                        <t:template>
                            <Text text="{scheduleModel>SEATOCC}" wrapping="false" />
                        </t:template>
                    </t:Column>
                    <!-- Economy Fare -->
                    <t:Column  width="4em" hAlign="Left" visible = "true" sortProperty="PRICE" filterProperty="PRICE">
                        <Label text="Fare" />
                        <t:template>
                            <!-- <Text text="{testModel>price}" wrapping="false"/> -->
                            <ObjectNumber
                                class="sapUiSmallMarginBottom"
                                binding="{scheduleModel}"
                                number="{
                                        parts:[{path:'scheduleModel>PRICE'},{path:'scheduleModel>CURRENCY'}],
                                        type: 'sap.ui.model.type.Currency',
                                        formatOptions: {showMeasure: false}
                                    }"
                                unit="{scheduleModel>CURRENCY}"
                                state="Warning" />
                        </t:template>
                    </t:Column>
                    <!-- Business -->
                    <t:Column  width="5em" hAlign="Center" visible = "true" sortProperty="SEATOCC_B" filterProperty="SEATOCC_B">
                        <Label text="Business" />
                        <t:template>
                            <Text text="{scheduleModel>SEATOCC_B}" wrapping="false"/>
                        </t:template>
                    </t:Column>
                    <!-- Business Fare -->
                    <t:Column hAlign="Center" width="4em" sortProperty="PRICE_B" filterProperty="PRICE_B">
                        <Text text="Fare" /> 
                        <t:template>
                            <!-- <Text text="{testModel>price_b}" /> -->
                            <ObjectNumber
                                class="sapUiSmallMarginBottom"
                                binding="{scheduleModel}"
                                number="{
                                        parts:[{path:'scheduleModel>PRICE_B'},{path:'scheduleModel>CURRENCY'}],
                                        type: 'sap.ui.model.type.Currency',
                                        formatOptions: {showMeasure: false}
                                    }"
                                unit="{scheduleModel>CURRENCY}"
                                state="Success" />                            
                        </t:template>
                    </t:Column>
                    <!-- First -->
                    <t:Column  width="4em" hAlign="Center" visible = "true" sortProperty="SEATOCC_F" filterProperty="SEATOCC_F">
                        <Label text="First" />
                        <t:template>
                            <Text text="{scheduleModel>SEATOCC_F}" wrapping="false"/>
                        </t:template>
                    </t:Column>
                    <!-- First Fare -->
                    <t:Column hAlign="Center" width="4em" sortProperty="PRICE_F" filterProperty="PRICE_F">
                        <Text text="Fare" /> 
                        <t:template>
                            <!-- <Text text="{testModel>price_f}" /> -->
                            <ObjectNumber
                                class="sapUiSmallMarginBottom"
                                binding="{scheduleModel}"
                                number="{
                                        parts:[{path:'scheduleModel>PRICE_F'},{path:'scheduleModel>CURRENCY'}],
                                        type: 'sap.ui.model.type.Currency',
                                        formatOptions: {showMeasure: false}
                                    }"
                                unit="{scheduleModel>CURRENCY}"
                                state="Information" />                            
                        </t:template>
                    </t:Column>
                    <!-- Currency -->
                    <!-- <t:Column hAlign="Center" width="5em" sortProperty="currency" filterProperty="currency">
                        <Text text="Currency" /> 
                        <t:template>
                            <Text text="{testModel>currency}" />
                        </t:template>
                    </t:Column>					 -->
                </t:columns>
            </t:Table>  	
		</f:content> 	
		<f:footer>
			<OverflowToolbar>
				<Button icon="sap-icon://message-popup"
						text="test"
						type="Emphasized"
						press="onMessageButtonPress"
						visible="true"/>
				<ToolbarSpacer/>
				<Button type="Accept" text="Accept"/>
				<Button type="Reject" text="Reject"/>
			</OverflowToolbar>
		</f:footer>
	</f:DynamicPage>
</mvc:View>