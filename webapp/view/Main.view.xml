<mvc:View controllerName="chatbot.djchatbotai.controller.Main"
	displayBlock="true"
    xmlns:mvc="sap.ui.core.mvc" 
    xmlns:core="sap.ui.core"
	xmlns:layout="sap.ui.layout"
	xmlns:t="sap.ui.table"
	xmlns:tnt="sap.tnt"
    xmlns="sap.m">

	<layout:VerticalLayout width="100%">
		<Title
			level="H1"
			titleStyle="H1"
			textAlign="Center"
			text="Where To Go?"
			title="Where To Go?"
			class="sapUiLargeMarginTop sapUiLargeMarginBegin"/>
		<layout:VerticalLayout
				width="100%"
				class="gridWrapper">
			<layout:Grid>
				<VBox>
				</VBox>
			</layout:Grid>
		</layout:VerticalLayout>
	</layout:VerticalLayout>
    <Panel width="90%" class="sapUiLargeMarginBegin sapUiLargeMarginTop sapUiMediumMarginBottom">
        <FlexBox
            height="100%"
            alignItems="Start"
            justifyContent="Center"
            class="sapUiResponsiveMargin"
            width="90%">
            <tnt:InfoLabel id="l1" text="Starting point" renderMode="Loose" colorScheme="5"  icon="sap-icon://journey-depart" class="sapUiLargeMarginBegin sapUiSmallMargin"/>	
            <Select
                id="flightFrom"
                class="sapUiSmallMargin"
                forceSelection="false"
                selectedKey="{filterModel>/LocationFrom}"
                items="{
                    path: 'filterModel>/StartingPoint',
                    sorter: { path: 'filterModel>Country' }
                }">
                <core:Item key="{filterModel>AirportID}" text="{filterModel>Country}" />
            </Select>				
            <tnt:InfoLabel id="l2" text="Destination" renderMode="Loose" colorScheme="5" icon="sap-icon://journey-arrive" class="sapUiSmallMargin"/>	
            <Select
                id="flightTo"
                class="sapUiSmallMargin"
                forceSelection="false"
                selectedKey="{filterModel>/LocationTo}"
                items="{
                    path: 'filterModel>/Destination',
                    sorter: { path: 'filterModel>Country' }
                }">
                <core:Item key="{filterModel>AirportID}" text="{filterModel>Country}" />
            </Select>
            <tnt:InfoLabel id="l3" text="Passenger" renderMode="Loose" colorScheme="5" icon="sap-icon://group" class="sapUiSmallMargin"/>						
            <Input
                id="Passenger"
                class="sapUiSmallMargin"
                required = "true"
                value="{filterModel>/Passenger}"
                type = "Number"
                editable="true"	
                width="30%"/>	
            <Button
                text="Search"
                press=".onSearchFilter"
                class="sapUiSmallMargin sapUiSmallMarginEnd"/>
        </FlexBox>		
        <!-- 임시방편, 실제로는 search 시에 filter로 read하여 값이 있는지 확인 -->
        <t:Table 
            id="validationTable"
            visible = "false"
            noData="No Flight schedule"
            rows="{
                path: 'scheduleModel>/results',						
                sorter: [
                    {path: 'carrid'}, {path: 'connid'} 
                ]
            }"
            threshold = "50"
            rowActionCount="1"
            columnResize="onColumnResize"
            enableColumnFreeze="true"
            width="100%">
            <t:columns>
                <!-- Airline -->
                <t:Column hAlign="Center" width="3rem" sortProperty="carrid" filterProperty="carrid">
                    <Label text="Airline"/>
                    <t:template>
                        <Text text="{
                            path: 'testModel>carrid',
                            type: 'sap.ui.model.type.String'
                        }"/>
                    </t:template>
                </t:Column>
                <!-- Flight Code -->
                <t:Column hAlign="Center" width="4em" sortProperty="connid" filterProperty="connid" >
                    <Label text="Flight Code" textAlign="Center"/>
                    <t:template>
                        <Text text="{testModel>connid}" wrapping="false" textAlign="Left"/>
                    </t:template>
                </t:Column>
                <!-- Departure -->
                <t:Column  width="8em" hAlign="Left" sortProperty="cityfrom" filterProperty="cityfrom">
                    <Label text="Departure" />
                    <t:template>
                        <Text text="{testModel>cityfrom}" wrapping="false"/>
                    </t:template>
                </t:Column>
                <!-- Arrival -->
                <t:Column  width="8em" hAlign="Left" sortProperty="cityto" filterProperty="cityto">
                    <Label text="Arrival" />
                    <t:template>
                        <Text text="{testModel>cityto}" wrapping="false"/>
                    </t:template>
                </t:Column>
                <!-- Flight Date -->
                <t:Column  width="6em" hAlign="Left" sortProperty="fldate" filterProperty="fldate">
                    <Label text="Flight Date" />
                    <t:template>
                        <Text text="{
                            path : 'testModel>fldate',
                            formatter : '.formatDate'
                        }" wrapping="false"/>
                    </t:template>
                </t:Column>
                <!-- Departure Time -->
                <t:Column  width="6em" hAlign="Left" sortProperty="deptime" filterProperty="deptime">
                    <Label text="Departure Time" />
                    <t:template>
                        <Text text="{ path : 'testModel>deptime', formatter : '.formatTime' }" wrapping="false"/>
                    </t:template>
                </t:Column>
                <!-- Arrival Time -->
                <t:Column  width="6em" hAlign="Left" sortProperty="arrtime" filterProperty="arrtime">
                    <Label text="Arrival Time" />
                    <t:template>
                        <Text text="{ path : 'testModel>arrtime', formatter : '.formatTime' }" wrapping="false"/>
                        <!-- <Text text="{testModel>arrtime}" wrapping="false"/> -->
                    </t:template>
                </t:Column>
                <!-- Economy -->
                <t:Column width="5em" hAlign="Left" sortProperty="seatocc" filterProperty="seatocc">
                    <Label text="Economy" />
                    <t:template>
                        <Text text="{testModel>seatocc}" wrapping="false" />
                    </t:template>
                </t:Column>			
                <!-- Business -->		
                <t:Column  width="5em" hAlign="Left" visible = "true" sortProperty="seatocc_b" filterProperty="seatocc_b">
                    <Label text="Business" />
                    <t:template>
                        <Text text="{testModel>seatocc_b}" wrapping="false"/>
                    </t:template>
                </t:Column>			
                <!-- First -->
                <t:Column  width="4em" hAlign="Left" visible = "true" sortProperty="seatocc_f" filterProperty="seatocc_f">
                    <Label text="First" />
                    <t:template>
                        <Text text="{testModel>seatocc_f}" wrapping="false"/>
                    </t:template>
                </t:Column>							
            </t:columns>
        </t:Table> 
    </Panel>

	
</mvc:View>
